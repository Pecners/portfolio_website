blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::build_site()
blogdown:::serve_site()
content:
# Choose the taxonomy from `config.toml` to display (e.g. tags, categories)
taxonomy: tags
# Choose how many tags you would like to display (0 = all tags)
count: 20
design:
# Minimum and maximum font sizes (1.0 = 100%).
font_size_min: 0.7
font_size_max: 2.0
---
blogdown:::serve_site()
blogdown::hugo_cmd("hugo mod clean")
blogdown::hugo_cmd("mod clean")
blogdown::hugo_cmd("server")
blogdown::hugo_cmd("mod clean")
blogdown::hugo_cmd("mod get -u ./...")
blogdown::hugo_cmd("server")
blogdown:::serve_site()
library(tidyverse)
crime <- read_csv("https://data.milwaukee.gov/dataset/e5feaad3-ee73-418c-b65d-ef810c199390/resource/87843297-a6fa-46d4-ba5d-cb342fb2d3bb/download/wibr.csv")
View(crime)
crime %>%
ggplot(aes(year)) +
geom_col()
crime %>%
ggplot(aes(ReportedYear)) +
geom_col()
crime %>%
ggplot(aes(ReportedYear)) +
geom_bar()
# Chunk 1
library(tidyverse)
# FYI this file is over 600,000 observations
crime <- read_csv("https://data.milwaukee.gov/dataset/5a537f5c-10d7-40a2-9b93-3527a4c89fbd/resource/395db729-a30a-4e53-ab66-faeb5e1899c8/download/wibrarchive.csv")
# Chunk 2
glimpse(crime)
# Chunk 3
library(sf)
# cleaning data for mapping ====
crime_location <- crime %>%
filter(!is.na(RoughX) & !is.na(RoughY)) %>%
st_as_sf(coords = c("RoughX", "RoughY"), crs = 32054)
# Chunk 4
# Shapefiles can be found online
# or I have a repo here: https://github.com/Pecners/shapefiles
# Note that you will need all files located in a single folder
neighb <- read_sf("milwaukee_neighborhood/neighborhood.shp")
# align to the same CRS
crime_neighb <- st_transform(crime_location, crs = st_crs(neighb))
# Chunk 5
# this chunk takes a while
crime_neighb <- crime_neighb %>%
filter(ReportedYear == 2018) %>%
gather("Crime", "yn", -c(1:12, 23)) %>%
# remove dummie `no` observations
filter(yn != 0)
# this chunk takes a while longer
crime_neighb <- st_intersection(neighb, crime_neighb)
# Chunk 6
library(tmap)
# make the map ====
# add the neighborhood data aesthetic
tm_shape(neighb) +
# add polygon layer with borders set to transparent
# this plots the grey city outline
tm_polygons(border.alpha = 0) +
# add the crime data aesthetic
tm_shape(crime_neighb) +
# add dot layer with 0.5 alpha to show overlap
tm_dots(col = "red", alpha = 0.5) +
# facet by our gathered `Crime` variable
# free.coords = FALSE keeps each facet the same zoom
tm_facets(by = "Crime", free.coords = FALSE) +
tm_layout(main.title = "Reported Crimes in Milwaukee, 2018")
install.packages("tmap")
neighb <- read_sf("milwaukee_neighborhood/neighborhood.shp")
neighb <- read_sf("data/milwaukee_neighborhood/neighborhood.shp")
neighb <- read_sf("content/post/crime_in_milwaukee/data/milwaukee_neighborhood/neighborhood.shp")
crime_neighb <- st_transform(crime_location, crs = st_crs(neighb))
